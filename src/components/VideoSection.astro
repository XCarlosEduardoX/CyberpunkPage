---
interface Props {
    nameSection: string;
    urlVideo: string;
    urlImage: string;
    urlCover: string;
}

const { urlImage, urlVideo, nameSection, urlCover } = Astro.props;

if (nameSection == "edgerunners-section") {
    const section = document.getElementById("video-section");
    section?.classList.add("video-bg-gradient");
}
---

<div class="video-section">
    <canvas id=`canvas-${nameSection}` class="blur-canvas"></canvas>
    <img src={urlCover} alt="cover" class="cover-image fadein" />
    <video
        autoplay
        muted
        loop
        id=`video-${nameSection}`
        playsinline="playsinline"
    >
        <source src={urlVideo} type="video/mp4; codecs=av01.0.05M.08" />
    </video>
    <div class="image-logo">
        <img class="glitch" src={urlImage} alt="logo" />
    </div>
</div>

<style>
    .fadein {
        opacity: 0;
        transition: all 0.5s;
        transform: translate(-100px, 0);
    }

    .fadein.visible {
        opacity: 1;
        transform: translate(0, 0);
    }
    video {
        width: 100%;
        height: 100vh;
        object-fit: cover;
        z-index: 11;
    }

    .video-section {
        width: 100%;
        position: relative;
        z-index: 10;
    }

    .video-bg-gradient::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            360deg,
            #dcff6d 10%,
            #50d063 30%,
            transparent 100%
        );
        /* linear-gradient(180deg, #dcff6d 0%, #dcff6d 30%),linear-gradient(180deg,#50d063 31%, transparent 100%); */
        z-index: 12;
    }

    .video-section video {
        width: 100%;
        height: 100vh;
        object-fit: cover;
        position: relative;
        opacity: 0.5;
        z-index: 11 !important;
    }

    .video-section canvas {
        width: 100%;
        height: 130vh;
        filter: blur(70px);
        position: absolute;
        z-index: 1;
    }
    .video-section .cover-image {
        width: 100%;
        height: 100vh;
        object-fit: cover;
        position: absolute;
        z-index: 12;
        filter: brightness(0.7);
    }

    .video-section .image-logo {
        width: 100%;
        height: 90vh;
        top: 0;
        z-index: 12;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        position: absolute;
    }

    @media screen and (max-width: 480px) {
        .video-section .image-logo {
            margin-left: 10%;
            margin-right: 10%;
            width: 80%;
        }
        .video-section .cover-image {
            /* width: 100%; */
            height: 80vh;
            object-fit: cover;

            bottom: 0;
        }
        .video-section .image-logo {
            width: 100%;
            height: 100vh;
            top: 0;
            z-index: 12;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: absolute;
        }
    }
    @media screen and (max-width: 780px) {
        .video-section .image-logo {
            margin-left: 5%;
            margin-right: 5%;
            width: 90%;
        }
    }
</style>

<script>
    //obtener la propiedad name del componente

    var canvas1 = document.getElementById("canvas-cyberpunk");
    var canvas2 = document.getElementById("canvas-edgerunners");
    var canvas3 = document.getElementById("canvas-phantomliberty");

    var video1 = document.getElementById("video-cyberpunk");
    var video2 = document.getElementById("video-edgerunners");
    var video3 = document.getElementById("video-phantomliberty");
    var ctx1 = (canvas1 as HTMLCanvasElement)?.getContext("2d");
    var ctx2 = (canvas2 as HTMLCanvasElement)?.getContext("2d");
    var ctx3 = (canvas3 as HTMLCanvasElement)?.getContext("2d");

    video1?.addEventListener(
        "play",
        function () {
            // playSong("song-cyberpunk");
            var $this = this;

            (function loop() {
                if (
                    !(video1 as HTMLVideoElement).paused &&
                    !(video1 as HTMLVideoElement).ended
                ) {
                    ctx1?.drawImage(
                        $this as HTMLImageElement,
                        0,
                        0,
                        ($this as HTMLVideoElement).videoWidth,
                        ($this as HTMLVideoElement).videoHeight,
                        0,
                        0,
                        (canvas1 as HTMLCanvasElement)?.width,
                        (canvas1 as HTMLCanvasElement)?.height,
                    );
                    setTimeout(loop, 1000 / 30);
                }
            })();
        },
        0 as any,
    );

    video2?.addEventListener(
        "play",
        function () {
            // playSong("song-cyberpunk");
            var $this = this;

            (function loop() {
                if (
                    !(video2 as HTMLVideoElement).paused &&
                    !(video2 as HTMLVideoElement).ended
                ) {
                    ctx2?.drawImage(
                        $this as HTMLImageElement,
                        0,
                        0,
                        ($this as HTMLVideoElement).videoWidth,
                        ($this as HTMLVideoElement).videoHeight,
                        0,
                        0,
                        (canvas2 as HTMLCanvasElement)?.width,
                        (canvas2 as HTMLCanvasElement)?.height,
                    );
                    setTimeout(loop, 1000 / 30);
                }
            })();
        },
        0 as any,
    );

    video3?.addEventListener(
        "play",
        function () {
            // playSong("song-cyberpunk");
            var $this = this;

            (function loop() {
                if (
                    !(video3 as HTMLVideoElement).paused &&
                    !(video3 as HTMLVideoElement).ended
                ) {
                    ctx3?.drawImage(
                        $this as HTMLImageElement,
                        0,
                        0,
                        ($this as HTMLVideoElement).videoWidth,
                        ($this as HTMLVideoElement).videoHeight,
                        0,
                        0,
                        (canvas3 as HTMLCanvasElement)?.width,
                        (canvas3 as HTMLCanvasElement)?.height,
                    );
                    setTimeout(loop, 1000 / 30);
                }
            })();
        },
        0 as any,
    );
</script>
